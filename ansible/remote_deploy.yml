# Launch auto scaling group using Amazon Linux for an environment
---

- name: Create dynamic inventory of instances in an environment
  hosts: localhost
  gather_facts: true
  vars:
    # Pass greetings_env value on command line to override
    - greetings_env: dev

  tasks:

    - name: Get ec2 facts for instance_id
      ec2_remote_facts:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ aws_region }}"
        filters:
          instance-state-name: running
          "tag:Env": "{{ greetings_env }}"
      register: ec2_instances

#    - name: Show instance facts
#      debug:
#        var: ec2_instances

    - name: Create list of instance IPs
      set_fact:
        ec2_instance_ips: "{{ ec2_instances.instances | map(attribute='public_ip_address') | list }}"

    - name: Add instances to Ansible inventory
      add_host:
        name: "{{ item }}"
        group: deployment_targets
      with_items:
        - "{{ ec2_instance_ips }}"

- name: Deploy target instances
  hosts: deployment_targets
  gather_facts: true
  become: true
  become_user: root
  vars:
    # Pass greetings_env or code_branch value on command line to override
    - greetings_env: dev
    - code_branch: ""     # Uses default_branches var unless overwritten

  tasks:

    - name: Template deployment helper script
      template:
        src: deployment.sh.j2
        dest: /root/deployment.sh
        mode: 0755
        force: true

    - name: Run deployment script so node can checkout and deploy code
      command: "/root/deployment.sh {{ code_branch }}"